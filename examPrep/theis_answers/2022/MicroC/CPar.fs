// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)

open Absyn

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10

# 19 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | CHAR
  | ELSE
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | WITHIN
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_WITHIN
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | NOT  -> 11 
  | SEQOR  -> 12 
  | SEQAND  -> 13 
  | EQ  -> 14 
  | NE  -> 15 
  | GT  -> 16 
  | LT  -> 17 
  | GE  -> 18 
  | LE  -> 19 
  | PLUS  -> 20 
  | MINUS  -> 21 
  | TIMES  -> 22 
  | DIV  -> 23 
  | MOD  -> 24 
  | CHAR  -> 25 
  | ELSE  -> 26 
  | IF  -> 27 
  | INT  -> 28 
  | NULL  -> 29 
  | PRINT  -> 30 
  | PRINTLN  -> 31 
  | RETURN  -> 32 
  | VOID  -> 33 
  | WHILE  -> 34 
  | WITHIN  -> 35 
  | CSTSTRING _ -> 36 
  | NAME _ -> 37 
  | CSTINT _ -> 38 
  | CSTBOOL _ -> 39 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_NOT 
  | 12 -> TOKEN_SEQOR 
  | 13 -> TOKEN_SEQAND 
  | 14 -> TOKEN_EQ 
  | 15 -> TOKEN_NE 
  | 16 -> TOKEN_GT 
  | 17 -> TOKEN_LT 
  | 18 -> TOKEN_GE 
  | 19 -> TOKEN_LE 
  | 20 -> TOKEN_PLUS 
  | 21 -> TOKEN_MINUS 
  | 22 -> TOKEN_TIMES 
  | 23 -> TOKEN_DIV 
  | 24 -> TOKEN_MOD 
  | 25 -> TOKEN_CHAR 
  | 26 -> TOKEN_ELSE 
  | 27 -> TOKEN_IF 
  | 28 -> TOKEN_INT 
  | 29 -> TOKEN_NULL 
  | 30 -> TOKEN_PRINT 
  | 31 -> TOKEN_PRINTLN 
  | 32 -> TOKEN_RETURN 
  | 33 -> TOKEN_VOID 
  | 34 -> TOKEN_WHILE 
  | 35 -> TOKEN_WITHIN 
  | 36 -> TOKEN_CSTSTRING 
  | 37 -> TOKEN_NAME 
  | 38 -> TOKEN_CSTINT 
  | 39 -> TOKEN_CSTBOOL 
  | 42 -> TOKEN_end_of_input
  | 40 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Vardec 
    | 7 -> NONTERM_Vardesc 
    | 8 -> NONTERM_Vardesc 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Fundec 
    | 13 -> NONTERM_Fundec 
    | 14 -> NONTERM_Paramdecs 
    | 15 -> NONTERM_Paramdecs 
    | 16 -> NONTERM_Paramdecs1 
    | 17 -> NONTERM_Paramdecs1 
    | 18 -> NONTERM_Block 
    | 19 -> NONTERM_StmtOrDecSeq 
    | 20 -> NONTERM_StmtOrDecSeq 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_Stmt 
    | 23 -> NONTERM_Stmt 
    | 24 -> NONTERM_StmtM 
    | 25 -> NONTERM_StmtM 
    | 26 -> NONTERM_StmtM 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtU 
    | 31 -> NONTERM_StmtU 
    | 32 -> NONTERM_StmtU 
    | 33 -> NONTERM_Expr 
    | 34 -> NONTERM_Expr 
    | 35 -> NONTERM_ExprNotAccess 
    | 36 -> NONTERM_ExprNotAccess 
    | 37 -> NONTERM_ExprNotAccess 
    | 38 -> NONTERM_ExprNotAccess 
    | 39 -> NONTERM_ExprNotAccess 
    | 40 -> NONTERM_ExprNotAccess 
    | 41 -> NONTERM_ExprNotAccess 
    | 42 -> NONTERM_ExprNotAccess 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_AtExprNotAccess 
    | 56 -> NONTERM_AtExprNotAccess 
    | 57 -> NONTERM_AtExprNotAccess 
    | 58 -> NONTERM_Access 
    | 59 -> NONTERM_Access 
    | 60 -> NONTERM_Access 
    | 61 -> NONTERM_Access 
    | 62 -> NONTERM_Access 
    | 63 -> NONTERM_Exprs 
    | 64 -> NONTERM_Exprs 
    | 65 -> NONTERM_Exprs1 
    | 66 -> NONTERM_Exprs1 
    | 67 -> NONTERM_Const 
    | 68 -> NONTERM_Const 
    | 69 -> NONTERM_Const 
    | 70 -> NONTERM_Const 
    | 71 -> NONTERM_Type 
    | 72 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 42 
let _fsyacc_tagOfErrorTerminal = 40

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | WITHIN  -> "WITHIN" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | WITHIN  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us;65535us;1us;65535us;0us;1us;2us;65535us;0us;2us;4us;5us;2us;65535us;0us;4us;4us;4us;8us;65535us;0us;6us;4us;6us;25us;34us;29us;34us;35us;34us;37us;42us;40us;42us;43us;42us;4us;65535us;9us;11us;10us;11us;14us;15us;16us;17us;2us;65535us;0us;8us;4us;8us;2us;65535us;25us;26us;29us;30us;3us;65535us;25us;33us;29us;33us;35us;36us;8us;65535us;27us;28us;31us;32us;37us;54us;40us;54us;43us;54us;58us;54us;59us;54us;64us;54us;3us;65535us;37us;38us;40us;41us;43us;44us;4us;65535us;37us;40us;40us;40us;43us;40us;58us;67us;6us;65535us;37us;45us;40us;45us;43us;45us;58us;46us;59us;60us;64us;65us;6us;65535us;37us;47us;40us;47us;43us;47us;58us;47us;59us;66us;64us;68us;31us;65535us;37us;48us;40us;48us;43us;48us;50us;52us;56us;57us;58us;48us;59us;48us;62us;63us;64us;48us;74us;75us;77us;102us;80us;81us;82us;83us;103us;85us;104us;86us;105us;87us;106us;88us;107us;89us;108us;90us;109us;91us;110us;92us;111us;93us;112us;94us;113us;95us;114us;96us;115us;97us;117us;99us;118us;100us;121us;98us;132us;101us;135us;102us;31us;65535us;37us;71us;40us;71us;43us;71us;50us;71us;56us;71us;58us;71us;59us;71us;62us;71us;64us;71us;74us;71us;77us;71us;80us;71us;82us;71us;103us;71us;104us;71us;105us;71us;106us;71us;107us;71us;108us;71us;109us;71us;110us;71us;111us;71us;112us;71us;113us;71us;114us;71us;115us;71us;117us;71us;118us;71us;121us;72us;132us;71us;135us;71us;32us;65535us;37us;73us;40us;73us;43us;73us;50us;73us;56us;73us;58us;73us;59us;73us;62us;73us;64us;73us;74us;73us;77us;73us;80us;73us;82us;73us;103us;73us;104us;73us;105us;73us;106us;73us;107us;73us;108us;73us;109us;73us;110us;73us;111us;73us;112us;73us;113us;73us;114us;73us;115us;73us;117us;73us;118us;73us;121us;73us;129us;131us;132us;73us;135us;73us;34us;65535us;37us;70us;40us;70us;43us;70us;50us;70us;56us;70us;58us;70us;59us;70us;62us;70us;64us;70us;74us;70us;77us;70us;80us;70us;82us;70us;103us;70us;104us;70us;105us;70us;106us;70us;107us;70us;108us;70us;109us;70us;110us;70us;111us;70us;112us;70us;113us;70us;114us;70us;115us;70us;117us;70us;118us;70us;121us;69us;123us;124us;126us;127us;129us;130us;132us;70us;135us;70us;1us;65535us;77us;78us;2us;65535us;77us;134us;135us;136us;32us;65535us;37us;120us;40us;120us;43us;120us;50us;120us;56us;120us;58us;120us;59us;120us;62us;120us;64us;120us;74us;120us;77us;120us;80us;120us;82us;120us;103us;120us;104us;120us;105us;120us;106us;120us;107us;120us;108us;120us;109us;120us;110us;120us;111us;120us;112us;120us;113us;120us;114us;120us;115us;120us;117us;120us;118us;120us;121us;120us;129us;120us;132us;120us;135us;120us;8us;65535us;0us;10us;4us;10us;25us;9us;29us;9us;35us;9us;37us;9us;40us;9us;43us;9us;|]
let _fsyacc_sparseGotoTableRowOffsets = [|0us;1us;3us;6us;9us;18us;23us;26us;29us;33us;42us;46us;51us;58us;65us;97us;129us;162us;197us;199us;202us;235us;|]
let _fsyacc_stateToProdIdxsTableElements = [| 1us;0us;1us;0us;1us;1us;1us;1us;1us;3us;1us;3us;1us;4us;1us;4us;1us;5us;1us;6us;2us;6us;13us;3us;6us;10us;11us;1us;7us;2us;7us;13us;1us;8us;3us;8us;10us;11us;1us;9us;3us;9us;10us;11us;1us;9us;2us;10us;11us;1us;10us;1us;11us;1us;11us;1us;12us;1us;12us;1us;12us;1us;12us;1us;12us;1us;12us;1us;13us;1us;13us;1us;13us;1us;13us;1us;15us;2us;16us;17us;1us;17us;1us;17us;1us;18us;1us;18us;1us;18us;1us;20us;1us;20us;1us;21us;1us;21us;1us;21us;1us;22us;3us;22us;28us;30us;1us;23us;15us;24us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;1us;24us;2us;25us;26us;1us;25us;15us;26us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;1us;26us;1us;27us;3us;28us;30us;31us;3us;28us;30us;31us;17us;28us;30us;31us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;3us;28us;30us;31us;2us;28us;30us;1us;28us;2us;29us;32us;2us;29us;32us;16us;29us;32us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;2us;29us;32us;1us;29us;1us;30us;1us;31us;1us;32us;4us;33us;36us;59us;62us;3us;33us;36us;62us;1us;34us;2us;34us;56us;1us;35us;1us;36us;15us;36us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;2us;37us;58us;1us;37us;1us;37us;1us;37us;1us;38us;15us;38us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;1us;39us;15us;39us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;1us;40us;15us;41us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;15us;41us;42us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;15us;41us;42us;43us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;15us;41us;42us;43us;44us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;15us;41us;42us;43us;44us;45us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;15us;41us;42us;43us;44us;45us;46us;46us;47us;48us;49us;50us;51us;52us;53us;54us;15us;41us;42us;43us;44us;45us;46us;47us;47us;48us;49us;50us;51us;52us;53us;54us;15us;41us;42us;43us;44us;45us;46us;47us;48us;48us;49us;50us;51us;52us;53us;54us;15us;41us;42us;43us;44us;45us;46us;47us;48us;49us;49us;50us;51us;52us;53us;54us;15us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;50us;51us;52us;53us;54us;15us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;51us;52us;53us;54us;15us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;52us;53us;54us;15us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;53us;54us;14us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;15us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;54us;15us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;54us;15us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;62us;16us;41us;42us;43us;44us;45us;46us;47us;48us;49us;50us;51us;52us;53us;54us;65us;66us;1us;41us;1us;42us;1us;43us;1us;44us;1us;45us;1us;46us;1us;47us;1us;48us;1us;49us;1us;50us;1us;51us;1us;52us;1us;53us;1us;54us;1us;54us;1us;54us;1us;54us;1us;55us;2us;56us;59us;1us;56us;1us;57us;2us;57us;62us;1us;58us;1us;59us;2us;59us;62us;1us;59us;2us;60us;61us;2us;60us;62us;1us;61us;1us;62us;1us;62us;1us;64us;1us;66us;1us;66us;1us;67us;1us;68us;1us;69us;1us;69us;1us;70us;1us;71us;1us;72us;|]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us;2us;4us;6us;8us;10us;12us;14us;16us;18us;20us;23us;27us;29us;32us;34us;38us;40us;44us;46us;49us;51us;53us;55us;57us;59us;61us;63us;65us;67us;69us;71us;73us;75us;77us;80us;82us;84us;86us;88us;90us;92us;94us;96us;98us;100us;102us;106us;108us;124us;126us;129us;131us;147us;149us;151us;155us;159us;177us;181us;184us;186us;189us;192us;209us;212us;214us;216us;218us;220us;225us;229us;231us;234us;236us;238us;254us;257us;259us;261us;263us;265us;281us;283us;299us;301us;317us;333us;349us;365us;381us;397us;413us;429us;445us;461us;477us;493us;509us;524us;540us;556us;572us;589us;591us;593us;595us;597us;599us;601us;603us;605us;607us;609us;611us;613us;615us;617us;619us;621us;623us;625us;628us;630us;632us;635us;637us;639us;642us;644us;647us;650us;652us;654us;656us;658us;660us;662us;664us;666us;668us;670us;672us;674us;|]
let _fsyacc_action_rows = 144
let _fsyacc_actionTableElements = [|3us;16386us;25us;143us;28us;142us;33us;23us;0us;49152us;1us;32768us;0us;3us;0us;16385us;3us;16386us;25us;143us;28us;142us;33us;23us;0us;16387us;1us;32768us;7us;7us;0us;16388us;0us;16389us;3us;32768us;1us;16us;22us;14us;37us;12us;3us;32768us;1us;16us;22us;14us;37us;13us;1us;16390us;5us;19us;0us;16391us;1us;16391us;1us;29us;3us;32768us;1us;16us;22us;14us;37us;12us;1us;16392us;5us;19us;3us;32768us;1us;16us;22us;14us;37us;12us;2us;32768us;2us;18us;5us;19us;0us;16393us;2us;32768us;6us;20us;38us;21us;0us;16394us;1us;32768us;6us;22us;0us;16395us;1us;32768us;37us;24us;1us;32768us;1us;25us;2us;16398us;25us;143us;28us;142us;1us;32768us;2us;27us;1us;32768us;3us;37us;0us;16396us;2us;16398us;25us;143us;28us;142us;1us;32768us;2us;31us;1us;32768us;3us;37us;0us;16397us;0us;16399us;1us;16400us;8us;35us;2us;32768us;25us;143us;28us;142us;0us;16401us;17us;16403us;1us;121us;3us;37us;10us;123us;11us;80us;21us;139us;22us;129us;25us;143us;27us;55us;28us;142us;29us;141us;30us;82us;31us;84us;32us;50us;34us;61us;37us;76us;38us;137us;39us;138us;1us;32768us;4us;39us;0us;16402us;17us;16403us;1us;121us;3us;37us;10us;123us;11us;80us;21us;139us;22us;129us;25us;143us;27us;55us;28us;142us;29us;141us;30us;82us;31us;84us;32us;50us;34us;61us;37us;76us;38us;137us;39us;138us;0us;16404us;1us;32768us;7us;43us;17us;16403us;1us;121us;3us;37us;10us;123us;11us;80us;21us;139us;22us;129us;25us;143us;27us;55us;28us;142us;29us;141us;30us;82us;31us;84us;32us;50us;34us;61us;37us;76us;38us;137us;39us;138us;0us;16405us;0us;16406us;1us;16406us;26us;59us;0us;16407us;15us;32768us;7us;49us;12us;115us;13us;114us;14us;108us;15us;109us;16us;110us;17us;111us;18us;112us;19us;113us;20us;103us;21us;104us;22us;105us;23us;106us;24us;107us;35us;116us;0us;16408us;12us;32768us;1us;121us;7us;51us;10us;123us;11us;80us;21us;139us;22us;129us;29us;141us;30us;82us;31us;84us;37us;76us;38us;137us;39us;138us;0us;16409us;15us;32768us;7us;53us;12us;115us;13us;114us;14us;108us;15us;109us;16us;110us;17us;111us;18us;112us;19us;113us;20us;103us;21us;104us;22us;105us;23us;106us;24us;107us;35us;116us;0us;16410us;0us;16411us;1us;32768us;1us;56us;11us;32768us;1us;121us;10us;123us;11us;80us;21us;139us;22us;129us;29us;141us;30us;82us;31us;84us;37us;76us;38us;137us;39us;138us;15us;32768us;2us;58us;12us;115us;13us;114us;14us;108us;15us;109us;16us;110us;17us;111us;18us;112us;19us;113us;20us;103us;21us;104us;22us;105us;23us;106us;24us;107us;35us;116us;15us;32768us;1us;121us;3us;37us;10us;123us;11us;80us;21us;139us;22us;129us;27us;55us;29us;141us;30us;82us;31us;84us;32us;50us;34us;61us;37us;76us;38us;137us;39us;138us;15us;32768us;1us;121us;3us;37us;10us;123us;11us;80us;21us;139us;22us;129us;27us;55us;29us;141us;30us;82us;31us;84us;32us;50us;34us;61us;37us;76us;38us;137us;39us;138us;0us;16412us;1us;32768us;1us;62us;11us;32768us;1us;121us;10us;123us;11us;80us;21us;139us;22us;129us;29us;141us;30us;82us;31us;84us;37us;76us;38us;137us;39us;138us;15us;32768us;2us;64us;12us;115us;13us;114us;14us;108us;15us;109us;16us;110us;17us;111us;18us;112us;19us;113us;20us;103us;21us;104us;22us;105us;23us;106us;24us;107us;35us;116us;15us;32768us;1us;121us;3us;37us;10us;123us;11us;80us;21us;139us;22us;129us;27us;55us;29us;141us;30us;82us;31us;84us;32us;50us;34us;61us;37us;76us;38us;137us;39us;138us;0us;16413us;0us;16414us;0us;16415us;0us;16416us;3us;16417us;2us;128us;5us;132us;9us;74us;2us;16417us;5us;132us;9us;74us;0us;16418us;1us;16418us;2us;122us;0us;16419us;11us;32768us;1us;121us;10us;123us;11us;80us;21us;139us;22us;129us;29us;141us;30us;82us;31us;84us;37us;76us;38us;137us;39us;138us;14us;16420us;12us;115us;13us;114us;14us;108us;15us;109us;16us;110us;17us;111us;18us;112us;19us;113us;20us;103us;21us;104us;22us;105us;23us;106us;24us;107us;35us;116us;1us;16442us;1us;77us;11us;16447us;1us;121us;10us;123us;11us;80us;21us;139us;22us;129us;29us;141us;30us;82us;31us;84us;37us;76us;38us;137us;39us;138us;1us;32768us;2us;79us;0us;16421us;11us;32768us;1us;121us;10us;123us;11us;80us;21us;139us;22us;129us;29us;141us;30us;82us;31us;84us;37us;76us;38us;137us;39us;138us;1us;16422us;35us;116us;11us;32768us;1us;121us;10us;123us;11us;80us;21us;139us;22us;129us;29us;141us;30us;82us;31us;84us;37us;76us;38us;137us;39us;138us;14us;16423us;12us;115us;13us;114us;14us;108us;15us;109us;16us;110us;17us;111us;18us;112us;19us;113us;20us;103us;21us;104us;22us;105us;23us;106us;24us;107us;35us;116us;0us;16424us;4us;16425us;22us;105us;23us;106us;24us;107us;35us;116us;4us;16426us;22us;105us;23us;106us;24us;107us;35us;116us;1us;16427us;35us;116us;1us;16428us;35us;116us;1us;16429us;35us;116us;10us;16430us;16us;110us;17us;111us;18us;112us;19us;113us;20us;103us;21us;104us;22us;105us;23us;106us;24us;107us;35us;116us;10us;16431us;16us;110us;17us;111us;18us;112us;19us;113us;20us;103us;21us;104us;22us;105us;23us;106us;24us;107us;35us;116us;6us;16432us;20us;103us;21us;104us;22us;105us;23us;106us;24us;107us;35us;116us;6us;16433us;20us;103us;21us;104us;22us;105us;23us;106us;24us;107us;35us;116us;6us;16434us;20us;103us;21us;104us;22us;105us;23us;106us;24us;107us;35us;116us;6us;16435us;20us;103us;21us;104us;22us;105us;23us;106us;24us;107us;35us;116us;12us;16436us;14us;108us;15us;109us;16us;110us;17us;111us;18us;112us;19us;113us;20us;103us;21us;104us;22us;105us;23us;106us;24us;107us;35us;116us;13us;16437us;13us;114us;14us;108us;15us;109us;16us;110us;17us;111us;18us;112us;19us;113us;20us;103us;21us;104us;22us;105us;23us;106us;24us;107us;35us;116us;14us;32768us;12us;115us;13us;114us;14us;108us;15us;109us;16us;110us;17us;111us;18us;112us;19us;113us;20us;103us;21us;104us;22us;105us;23us;106us;24us;107us;35us;116us;15us;32768us;8us;118us;12us;115us;13us;114us;14us;108us;15us;109us;16us;110us;17us;111us;18us;112us;19us;113us;20us;103us;21us;104us;22us;105us;23us;106us;24us;107us;35us;116us;15us;32768us;6us;119us;12us;115us;13us;114us;14us;108us;15us;109us;16us;110us;17us;111us;18us;112us;19us;113us;20us;103us;21us;104us;22us;105us;23us;106us;24us;107us;35us;116us;15us;32768us;6us;133us;12us;115us;13us;114us;14us;108us;15us;109us;16us;110us;17us;111us;18us;112us;19us;113us;20us;103us;21us;104us;22us;105us;23us;106us;24us;107us;35us;116us;15us;16449us;8us;135us;12us;115us;13us;114us;14us;108us;15us;109us;16us;110us;17us;111us;18us;112us;19us;113us;20us;103us;21us;104us;22us;105us;23us;106us;24us;107us;35us;116us;11us;32768us;1us;121us;10us;123us;11us;80us;21us;139us;22us;129us;29us;141us;30us;82us;31us;84us;37us;76us;38us;137us;39us;138us;11us;32768us;1us;121us;10us;123us;11us;80us;21us;139us;22us;129us;29us;141us;30us;82us;31us;84us;37us;76us;38us;137us;39us;138us;11us;32768us;1us;121us;10us;123us;11us;80us;21us;139us;22us;129us;29us;141us;30us;82us;31us;84us;37us;76us;38us;137us;39us;138us;11us;32768us;1us;121us;10us;123us;11us;80us;21us;139us;22us;129us;29us;141us;30us;82us;31us;84us;37us;76us;38us;137us;39us;138us;11us;32768us;1us;121us;10us;123us;11us;80us;21us;139us;22us;129us;29us;141us;30us;82us;31us;84us;37us;76us;38us;137us;39us;138us;11us;32768us;1us;121us;10us;123us;11us;80us;21us;139us;22us;129us;29us;141us;30us;82us;31us;84us;37us;76us;38us;137us;39us;138us;11us;32768us;1us;121us;10us;123us;11us;80us;21us;139us;22us;129us;29us;141us;30us;82us;31us;84us;37us;76us;38us;137us;39us;138us;11us;32768us;1us;121us;10us;123us;11us;80us;21us;139us;22us;129us;29us;141us;30us;82us;31us;84us;37us;76us;38us;137us;39us;138us;11us;32768us;1us;121us;10us;123us;11us;80us;21us;139us;22us;129us;29us;141us;30us;82us;31us;84us;37us;76us;38us;137us;39us;138us;11us;32768us;1us;121us;10us;123us;11us;80us;21us;139us;22us;129us;29us;141us;30us;82us;31us;84us;37us;76us;38us;137us;39us;138us;11us;32768us;1us;121us;10us;123us;11us;80us;21us;139us;22us;129us;29us;141us;30us;82us;31us;84us;37us;76us;38us;137us;39us;138us;11us;32768us;1us;121us;10us;123us;11us;80us;21us;139us;22us;129us;29us;141us;30us;82us;31us;84us;37us;76us;38us;137us;39us;138us;11us;32768us;1us;121us;10us;123us;11us;80us;21us;139us;22us;129us;29us;141us;30us;82us;31us;84us;37us;76us;38us;137us;39us;138us;1us;32768us;5us;117us;11us;32768us;1us;121us;10us;123us;11us;80us;21us;139us;22us;129us;29us;141us;30us;82us;31us;84us;37us;76us;38us;137us;39us;138us;11us;32768us;1us;121us;10us;123us;11us;80us;21us;139us;22us;129us;29us;141us;30us;82us;31us;84us;37us;76us;38us;137us;39us;138us;0us;16438us;0us;16439us;11us;32768us;1us;121us;10us;123us;11us;80us;21us;139us;22us;129us;29us;141us;30us;82us;31us;84us;37us;76us;38us;137us;39us;138us;0us;16440us;3us;32768us;1us;126us;22us;129us;37us;125us;1us;16441us;5us;132us;0us;16442us;3us;32768us;1us;126us;22us;129us;37us;125us;2us;32768us;2us;128us;5us;132us;0us;16443us;8us;32768us;1us;121us;10us;123us;21us;139us;22us;129us;29us;141us;37us;125us;38us;137us;39us;138us;1us;16444us;5us;132us;0us;16445us;11us;32768us;1us;121us;10us;123us;11us;80us;21us;139us;22us;129us;29us;141us;30us;82us;31us;84us;37us;76us;38us;137us;39us;138us;0us;16446us;0us;16448us;11us;32768us;1us;121us;10us;123us;11us;80us;21us;139us;22us;129us;29us;141us;30us;82us;31us;84us;37us;76us;38us;137us;39us;138us;0us;16450us;0us;16451us;0us;16452us;1us;32768us;38us;140us;0us;16453us;0us;16454us;0us;16455us;0us;16456us;|]
let _fsyacc_actionTableRowOffsets = [|0us;4us;5us;7us;8us;12us;13us;15us;16us;17us;21us;25us;27us;28us;30us;34us;36us;40us;43us;44us;47us;48us;50us;51us;53us;55us;58us;60us;62us;63us;66us;68us;70us;71us;72us;74us;77us;78us;96us;98us;99us;117us;118us;120us;138us;139us;140us;142us;143us;159us;160us;173us;174us;190us;191us;192us;194us;206us;222us;238us;254us;255us;257us;269us;285us;301us;302us;303us;304us;305us;309us;312us;313us;315us;316us;328us;343us;345us;357us;359us;360us;372us;374us;386us;401us;402us;407us;412us;414us;416us;418us;429us;440us;447us;454us;461us;468us;481us;495us;510us;526us;542us;558us;574us;586us;598us;610us;622us;634us;646us;658us;670us;682us;694us;706us;718us;730us;732us;744us;756us;757us;758us;770us;771us;775us;777us;778us;782us;785us;786us;795us;797us;798us;810us;811us;812us;824us;825us;826us;827us;829us;830us;831us;832us;|]
let _fsyacc_reductionSymbolCounts = [|1us;2us;0us;2us;2us;1us;2us;1us;2us;3us;3us;4us;6us;6us;0us;1us;1us;3us;3us;0us;2us;3us;1us;1us;2us;2us;3us;1us;7us;5us;7us;5us;5us;1us;1us;1us;3us;4us;2us;2us;1us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;3us;7us;1us;3us;2us;1us;3us;2us;2us;4us;0us;1us;1us;3us;1us;1us;2us;1us;1us;1us;|]
let _fsyacc_productionToNonTerminalTable = [|0us;1us;2us;2us;3us;3us;4us;5us;5us;5us;5us;5us;6us;6us;7us;7us;8us;8us;9us;10us;10us;10us;11us;11us;12us;12us;12us;12us;12us;12us;13us;13us;13us;14us;14us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;15us;16us;16us;16us;17us;17us;17us;17us;17us;18us;18us;19us;19us;20us;20us;20us;20us;21us;21us;|]
let _fsyacc_immediateActions = [|65535us;49152us;65535us;16385us;65535us;16387us;65535us;16388us;16389us;65535us;65535us;65535us;16391us;65535us;65535us;65535us;65535us;65535us;16393us;65535us;16394us;65535us;16395us;65535us;65535us;65535us;65535us;65535us;16396us;65535us;65535us;65535us;16397us;16399us;65535us;65535us;16401us;65535us;65535us;16402us;65535us;16404us;65535us;65535us;16405us;16406us;65535us;16407us;65535us;16408us;65535us;16409us;65535us;16410us;16411us;65535us;65535us;65535us;65535us;65535us;16412us;65535us;65535us;65535us;65535us;16413us;16414us;16415us;16416us;65535us;65535us;16418us;65535us;16419us;65535us;65535us;65535us;65535us;65535us;16421us;65535us;65535us;65535us;65535us;16424us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16438us;16439us;65535us;16440us;65535us;65535us;16442us;65535us;65535us;16443us;65535us;65535us;16445us;65535us;16446us;16448us;65535us;16450us;16451us;16452us;65535us;16453us;16454us;16455us;16456us;|]
let _fsyacc_reductions = lazy [|
# 401 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 410 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 41 "CPar.fsy"
                                                               Prog _1 
                   )
# 41 "CPar.fsy"
                 : Absyn.program));
# 421 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 45 "CPar.fsy"
                                                               [] 
                   )
# 45 "CPar.fsy"
                 : 'gentype_Topdecs));
# 431 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 46 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 46 "CPar.fsy"
                 : 'gentype_Topdecs));
# 443 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 50 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 50 "CPar.fsy"
                 : 'gentype_Topdec));
# 454 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 51 "CPar.fsy"
                                                               _1 
                   )
# 51 "CPar.fsy"
                 : 'gentype_Topdec));
# 465 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 55 "CPar.fsy"
                 : 'gentype_Vardec));
# 477 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 59 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 59 "CPar.fsy"
                 : 'gentype_Vardesc));
# 488 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 60 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 60 "CPar.fsy"
                 : 'gentype_Vardesc));
# 499 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "CPar.fsy"
                                                               _2                                      
                   )
# 61 "CPar.fsy"
                 : 'gentype_Vardesc));
# 510 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 62 "CPar.fsy"
                 : 'gentype_Vardesc));
# 521 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 63 "CPar.fsy"
                 : 'gentype_Vardesc));
# 533 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 67 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 67 "CPar.fsy"
                 : 'gentype_Fundec));
# 546 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 68 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 68 "CPar.fsy"
                 : 'gentype_Fundec));
# 560 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 72 "CPar.fsy"
                                                               [] 
                   )
# 72 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 570 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 73 "CPar.fsy"
                                                               _1 
                   )
# 73 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 581 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 77 "CPar.fsy"
                                                               [_1]     
                   )
# 77 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 592 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 78 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 78 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 604 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 82 "CPar.fsy"
                                                               Block _2 
                   )
# 82 "CPar.fsy"
                 : 'gentype_Block));
# 615 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "CPar.fsy"
                                                               [] 
                   )
# 86 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 625 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 87 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 637 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 88 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 649 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 "CPar.fsy"
                                                               _1 
                   )
# 92 "CPar.fsy"
                 : 'gentype_Stmt));
# 660 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 "CPar.fsy"
                                                               _1 
                   )
# 93 "CPar.fsy"
                 : 'gentype_Stmt));
# 671 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 97 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 97 "CPar.fsy"
                 : 'gentype_StmtM));
# 682 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "CPar.fsy"
                                                               Return None          
                   )
# 98 "CPar.fsy"
                 : 'gentype_StmtM));
# 692 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 99 "CPar.fsy"
                 : 'gentype_StmtM));
# 703 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 "CPar.fsy"
                                                               _1                   
                   )
# 100 "CPar.fsy"
                 : 'gentype_StmtM));
# 714 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 101 "CPar.fsy"
                 : 'gentype_StmtM));
# 727 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 102 "CPar.fsy"
                 : 'gentype_StmtM));
# 739 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 106 "CPar.fsy"
                 : 'gentype_StmtU));
# 752 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 107 "CPar.fsy"
                 : 'gentype_StmtU));
# 764 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 108 "CPar.fsy"
                 : 'gentype_StmtU));
# 776 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "CPar.fsy"
                                                               Access _1           
                   )
# 112 "CPar.fsy"
                 : 'gentype_Expr));
# 787 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "CPar.fsy"
                                                               _1                  
                   )
# 113 "CPar.fsy"
                 : 'gentype_Expr));
# 798 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "CPar.fsy"
                                                               _1                  
                   )
# 117 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 809 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 118 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 821 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 119 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 833 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 120 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 844 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 121 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 855 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 122 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 865 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 123 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 877 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 124 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 889 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 125 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 901 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 126 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 913 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 127 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 925 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 128 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 937 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 129 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 949 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 130 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 961 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 131 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 973 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 132 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 985 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 133 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 997 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 134 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1009 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 135 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1021 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_Expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "CPar.fsy"
                                                                     Within(_1, _4, _6) 
                   )
# 136 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1034 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "CPar.fsy"
                                                               CstI _1             
                   )
# 140 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1045 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "CPar.fsy"
                                                               _2                  
                   )
# 141 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1056 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "CPar.fsy"
                                                               Addr _2             
                   )
# 142 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1067 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "CPar.fsy"
                                                               AccVar _1           
                   )
# 146 "CPar.fsy"
                 : 'gentype_Access));
# 1078 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "CPar.fsy"
                                                               _2                  
                   )
# 147 "CPar.fsy"
                 : 'gentype_Access));
# 1089 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 148 "CPar.fsy"
                 : 'gentype_Access));
# 1100 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 149 "CPar.fsy"
                 : 'gentype_Access));
# 1111 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 150 "CPar.fsy"
                 : 'gentype_Access));
# 1123 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "CPar.fsy"
                                                               []       
                   )
# 154 "CPar.fsy"
                 : 'gentype_Exprs));
# 1133 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "CPar.fsy"
                                                               _1       
                   )
# 155 "CPar.fsy"
                 : 'gentype_Exprs));
# 1144 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "CPar.fsy"
                                                               [_1]     
                   )
# 159 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1155 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 160 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1167 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "CPar.fsy"
                                                               _1       
                   )
# 164 "CPar.fsy"
                 : 'gentype_Const));
# 1178 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "CPar.fsy"
                                                               _1       
                   )
# 165 "CPar.fsy"
                 : 'gentype_Const));
# 1189 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "CPar.fsy"
                                                               - _2     
                   )
# 166 "CPar.fsy"
                 : 'gentype_Const));
# 1200 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "CPar.fsy"
                                                               -1       
                   )
# 167 "CPar.fsy"
                 : 'gentype_Const));
# 1210 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "CPar.fsy"
                                                               TypI     
                   )
# 171 "CPar.fsy"
                 : 'gentype_Type));
# 1220 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "CPar.fsy"
                                                               TypC     
                   )
# 172 "CPar.fsy"
                 : 'gentype_Type));
|]
# 1231 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions = _fsyacc_reductions.Value;
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 43;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
